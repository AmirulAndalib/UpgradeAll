plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.protobuf'
}

def grpc_version = '1.38.1'
def protoc_version = '3.15.6'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "0.9"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    kapt {
        arguments {
            // ROOM export schema
            arg("room.schemaLocation", "$projectDir/schemas")
        }
    }

    buildTypes {
        release {
            buildConfigField "int", "SHIZUKU_VERSION_CODE", "1"
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug{
            buildConfigField "int", "SHIZUKU_VERSION_CODE", "1"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    protobuf {
        protoc { artifact = "com.google.protobuf:protoc:$protoc_version" }
        plugins {
            grpc {
                artifact = "io.grpc:protoc-gen-grpc-java:$grpc_version"
            }
        }
        generateProtoTasks {
            all().each { task ->
                task.builtins {
                    java { option 'lite' }
                }
                task.plugins {
                    grpc { // Options added to --grpc_out
                        option 'lite'
                    }
                }
            }
        }
    }
    sourceSets {
        main {
            java {
                srcDirs "${protobuf.generatedFilesBaseDir}/main/java"
                srcDirs "${protobuf.generatedFilesBaseDir}/main/grpc"
            }
        }
    }

}

dependencies {
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Kotlin
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    // Shizuku
    def shizuku_version = '11.0.3'
    implementation "dev.rikka.shizuku:api:$shizuku_version"
    // add this if you want to support Shizuku
    implementation "dev.rikka.shizuku:provider:$shizuku_version"
    api 'me.weishu:free_reflection:3.0.1'

    // DocumentFile
    implementation "androidx.documentfile:documentfile:1.0.1"

    // kotlin 协程
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0-native-mt'

    // database
    def room_version = '2.3.0'
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"


    // 数据处理
    implementation 'com.google.code.gson:gson:2.8.7'

    // 字符串匹配；日志打印去除转义字符
    implementation 'org.apache.commons:commons-text:1.9'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    // 版本比较
    implementation 'org.apache.maven:maven-artifact:3.8.1'

    // grpc
    implementation "io.grpc:grpc-okhttp:$grpc_version"
    implementation "io.grpc:grpc-protobuf-lite:$grpc_version"
    implementation "io.grpc:grpc-stub:$grpc_version"
    implementation "com.google.protobuf:protobuf-javalite:$protoc_version"
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // OkHttp
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.2'

    // WebDav
    implementation 'com.thegrizzlylabs.sardine-android:sardine-android:0.7'

    // Fetch
    api "androidx.tonyodev.fetch2:xfetch2:3.1.6"
    implementation "androidx.tonyodev.fetch2okhttp:xfetch2okhttp:3.1.6"

    // shell
    implementation 'eu.darken.rxshell:core:1.0.9'
    implementation 'eu.darken.rxshell:root:1.0.9'
}
